
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://xyfwsmblaayznplurmfa.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inh5ZndzbWJsYWF5em5wbHVybWZhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDA4NjQ5MzAsImV4cCI6MjA1NjQ0MDkzMH0.iSMjuUMOEGVP-eU7p1xng_XlSc3pNg_DbViVwyD3Fc8";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// ðŸ”„  always keep an anonymous / refreshed JWT
supabase.auth.onAuthStateChange((_evt, session) => {
  if (!session) supabase.auth.reauthenticate();
});

// Add debugging for connection issues
const checkConnection = async () => {
  try {
    const { error } = await supabase.from('prompts').select('id').limit(1);
    if (error) {
      console.error('Supabase connection check failed:', error);
    } else {
      console.log('Supabase connection established successfully');
    }
  } catch (err) {
    console.error('Supabase connection check exception:', err);
  }
};

// Run connection check when the app starts
checkConnection();
